{
    "variables": {
        "azure_comment": "Follow these guidelines to initialize the azure variables : https://www.packer.io/docs/builders/azure-setup.html",
        "azure_client_id": "{{env `ARM_CLIENT_ID`}}",
        "azure_client_secret": "{{env `ARM_CLIENT_SECRET`}}",
        "azure_resource_group": "{{env `ARM_RESOURCE_GROUP`}}",
        "azure_storage_account": "{{env `ARM_STORAGE_ACCOUNT`}}",
        "azure_subscription_id": "{{env `ARM_SUBSCRIPTION_ID`}}",
        "azure_tenant_id": "{{env `ARM_TENANT_ID`}}",
        "azure_location_comment": "Note GPU instances are not available in all regions https://azure.microsoft.com/en-us/pricing/details/virtual-machines/linux/",
        "azure_default_location": "East US",
        "aws_cli_comment": "These should really be configured using the AWS cli",
        "aws_access_key": "{{ env `AWS_ACCESS_KEY`}}",
        "aws_secret_key": "{{ env `AWS_SECRET_KEY` }}",
        "centos_ami": "ami-6d1c2007",
        "aws_default_region": "us-east-1",
        "atlas_token": "{{ env `ATLAS_TOKEN`}}"
    },
  "provisioners": [
    {
      "type": "shell",
      "execute_command": "sh -c '{{ .Vars }} {{ .Path }}'",
      "scripts": ["scripts/ubuntu.sh"]
    },
    {
        "type": "shell",
        "execute_command": "echo 'vagrant' | {{ .Vars }} sudo -E -S sh '{{ .Path }}'",
        "inline": [
            "echo '%sudo    ALL=(ALL)  NOPASSWD:ALL' >> /etc/sudoers"
        ]
    },
    {
      "type": "ansible-local",
      "playbook_file": "ansible/main.yml",
      "galaxy_file": "requirements.yml"
    },
    {
      "type": "shell",
      "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'",
       "scripts": ["scripts/cleanup.sh"],
       "except": ["docker"]
    },
    {
    "execute_command": "sudo sh -c '{{ .Vars }} {{ .Path }}'",
    "inline": [
      "yum update -y",
      "/usr/sbin/waagent -force -deprovision+user && export HISTSIZE=0 && sync"
    ],
    "inline_shebang": "/bin/sh -x",
    "type": "shell",
    "only": ["azure-arm"],
    "skip_clean": true
    }
  ],
  "builders": [
    {
    "type": "azure-arm",

    "client_id": "{{user `azure_client_id`}}",
    "client_secret": "{{user `azure_client_secret`}}",
    "resource_group_name": "{{user `azure_resource_group`}}",
    "storage_account": "{{user `azure_storage_account`}}",
    "subscription_id": "{{user `azure_subscription_id`}}",
    "tenant_id": "{{user `tenant_id`}}",

    "capture_container_name": "images",
    "capture_name_prefix": "packer",

    "ssh_username": "vagrant",
    "ssh_password": "vagrant",

    "os_type": "Linux",
    "image_publisher": "OpenLogic",
    "image_offer": "CentOS",
    "image_sku": "7.2",
    "image_version": "latest",
    "ssh_pty": "true",

    "location": "{{ user `azure_default_location`}}",
    "vm_size": "Standard_A2"
    },
    {
      "type": "amazon-ebs",
      "access_key": "{{user `aws_access_key`}}",
      "secret_key": "{{user `aws_secret_key`}}",
      "region": "{{user `aws_default_region`}}",
      "source_ami": "{{user `centos_ami`}}",
      "instance_type": "m3.medium",
      "ssh_username": "centos",
      "ssh_pty": "true",
      "ami_name": "packer-generated-dl4j-image {{timestamp}}",
      "ami_description": "Automatically generated with packer",
      "ami_virtualization_type": "hvm",
      "associate_public_ip_address": "true",
      "tags": {}
    },
    {
      "type": "virtualbox-iso",
        "boot_command": [
            "<enter><wait>",
            "<f6><esc>",
            "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
            "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
            "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
            "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
            "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
            "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
            "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
            "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
            "<bs><bs><bs>",
            "/install/vmlinuz ",
            "initrd=/install/initrd.gz ",
            "net.ifnames=0 ",
            "auto-install/enable=true ",
            "debconf/priority=critical ",
            "preseed/url=http://{{.HTTPIP}}:{{.HTTPPort}}/ubuntu-16.04/preseed.cfg ",
            "<enter>"
        ],
      "boot_wait": "10s",
      "disk_size": 81920,
      "guest_os_type": "Ubuntu_64",
      "headless": true,
      "http_directory": "http",
      "iso_url": "http://releases.ubuntu.com/xenial/ubuntu-16.04.2-server-amd64.iso",
      "iso_checksum_type": "sha256",
      "iso_checksum": "737ae7041212c628de5751d15c3016058b0e833fdc32e7420209b76ca3d0a535",
      "ssh_username": "vagrant",
      "ssh_password": "vagrant",
      "ssh_port": 22,
      "ssh_wait_timeout": "10000s",
      "shutdown_command": "sudo /sbin/halt -h -p",
      "guest_additions_path": "VBoxGuestAdditions_{{.Version}}.iso",
      "virtualbox_version_file": ".vbox_version",
      "vm_name": "packer-ubuntu16-x86_64",
      "vboxmanage": [
        [
          "modifyvm",
          "{{.Name}}",
          "--memory",
          "512"
        ],
        [
          "modifyvm",
          "{{.Name}}",
          "--cpus",
          "2"
        ]
      ]
    },
    {
      "type": "vmware-iso",
        "boot_command": [
            "<enter><wait>",
            "<f6><esc>",
            "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
            "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
            "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
            "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
            "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
            "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
            "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
            "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
            "<bs><bs><bs>",
            "/install/vmlinuz ",
            "initrd=/install/initrd.gz ",
            "net.ifnames=0 ",
            "auto-install/enable=true ",
            "debconf/priority=critical ",
            "preseed/url=http://{{.HTTPIP}}:{{.HTTPPort}}/ubuntu-16.04/preseed.cfg ",
            "<enter>"
        ],
      "boot_wait": "10s",
      "disk_size": 81920,
      "guest_os_type": "centos-64",
      "headless": true,
      "http_directory": "http",
      "iso_url": "http://releases.ubuntu.com/xenial/ubuntu-16.04.2-server-amd64.iso",
      "iso_checksum_type": "sha256",
      "iso_checksum": "737ae7041212c628de5751d15c3016058b0e833fdc32e7420209b76ca3d0a535",
      "ssh_username": "vagrant",
      "ssh_password": "vagrant",
      "ssh_port": 22,
      "ssh_wait_timeout": "10000s",
      "shutdown_command": "sudo /sbin/halt -h -p",
      "tools_upload_flavor": "linux",
      "vm_name": "packer-ubuntu16-x86_64",
      "vmx_data": {
        "cpuid.coresPerSocket": "1",
        "memsize": "512",
        "numvcpus": "2"
      }
    },
    {
      "type": "docker",
      "image": "huitseeker/docker-ubuntu16",
      "commit": "true"
    }
  ],
  "post-processors": [
    {
      "output": "builds/{{.Provider}}-ubuntu16.box",
      "type": "vagrant",
      "only": ["virtualbox-iso", "vmware-iso"]
    },
    [
      {
        "type": "docker-tag",
        "repository": "huitseeker/dl4j-ubuntu16-dev-env",
        "tag": "latest",
        "only": ["docker"]
      },
      { "type": "docker-push",
        "only": ["docker"]
      }
    ],
      {
          "type": "atlas",
          "token": "{{user `atlas_token`}}",
          "artifact": "huitseeker/dl4j-build-box-ubuntu16",
          "artifact_type": "vagrant.box",
          "metadata": { "provider": "virtualbox", "description": "Build box for deeplearning4j projects. Provisioned with (among others) cuda, blas & gcc-5. The docker image is hosted on docker hub (see [DockerHub](https://hub.docker.com/r/huitseeker/dl4j-centos7-dev-env/)). The vagrant box is hosted on Atlas see ([Atlas](https://atlas.hashicorp.com/huitseeker/boxes/dl4j-build-box)). The source code is hosted on GitHub (see [GitHub](https://github.com/deeplearning4j/packer-centos-7)). The image is provisioned with Packer, using a centos7 base image and an Ansible role. The role is on Ansible-Galaxy (see [Galaxy](https://galaxy.ansible.com/huitseeker/java_deps/))."},
          "only": ["virtualbox-iso"]
      }


  ]
}
